//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Maxima.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MaximaParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public interface IMaximaListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MaximaParser.matrix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatrix([NotNull] MaximaParser.MatrixContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MaximaParser.matrix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatrix([NotNull] MaximaParser.MatrixContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MaximaParser.matrix_rows"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatrix_rows([NotNull] MaximaParser.Matrix_rowsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MaximaParser.matrix_rows"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatrix_rows([NotNull] MaximaParser.Matrix_rowsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MaximaParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList([NotNull] MaximaParser.ListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MaximaParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList([NotNull] MaximaParser.ListContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentifierExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierExp([NotNull] MaximaParser.IdentifierExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentifierExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierExp([NotNull] MaximaParser.IdentifierExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IntegerExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerExp([NotNull] MaximaParser.IntegerExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IntegerExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerExp([NotNull] MaximaParser.IntegerExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenExp([NotNull] MaximaParser.ParenExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenExp([NotNull] MaximaParser.ParenExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExp([NotNull] MaximaParser.UnaryExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExp([NotNull] MaximaParser.UnaryExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpExp([NotNull] MaximaParser.ExpExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpExp([NotNull] MaximaParser.ExpExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MatrixExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatrixExp([NotNull] MaximaParser.MatrixExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MatrixExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatrixExp([NotNull] MaximaParser.MatrixExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PowerExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPowerExp([NotNull] MaximaParser.PowerExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PowerExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPowerExp([NotNull] MaximaParser.PowerExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BinaryExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryExp([NotNull] MaximaParser.BinaryExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BinaryExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryExp([NotNull] MaximaParser.BinaryExpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ListExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListExp([NotNull] MaximaParser.ListExpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ListExp</c>
	/// labeled alternative in <see cref="MaximaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListExp([NotNull] MaximaParser.ListExpContext context);
}
